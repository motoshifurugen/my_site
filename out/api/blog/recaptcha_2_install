{"slug":"recaptcha_2_install","title":"reCAPTCHA(リキャプチャ)導入","date":"2021-03-18","tags":["reCAPTCHA","PHP","セキュリティ"],"content":"\n## reCAPTCHAとは\n\nreCAPTCHA（リキャプチャ）とは、CAPTCHAと呼ばれる\nボットの攻撃からWebサイトを守る機能の一種。\n\nCAPTCHAとは「completely automated public Turing test to tell computers and humans apart 」の略で、人間とコンピュータを区別するためのテストというような意味を持つ。\n\n具体的な方法としては、下の画像のように崩れた文字を認識させたり、あてはまる画像を選択させたりする。\n\n![reCAPTCHAv1の例](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/594194/a219bdd0-62ec-4a2c-7fb2-24c5432211c8.png)\n![reCAPTCHAv2の例](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/594194/43588993-9150-4b6b-ef14-c7631dfc7021.png)\n\n2021年2月現在、reCAPTCHAはv1（提供停止）、v2、v3まで開発されてGoogleが提供している。\n\nreCAPTCHAについて詳しく書かれた記事はこちら▼\n[「reCAPTCHA」って？スパム対策に効果的なreCAPTCHAをフォームに入れてみた](https://www.synergy-marketing.co.jp/blog/using_recaptcha_on_form)\n\n## reCAPTCHA v2 導入手順\n\nクライアント側につける「サイトキー」とサーバー側につける「シークレットキー」によって機能をつけることができる。メール送信フォームを参考に、鍵を作成→クライアント側(HTMLとjQuery)を記述→サーバー側(PHP)を記述という流れで実装する。\n\n1. Google reCAPTCHA にアクセス\n   https://www.google.com/recaptcha/about/\n   ![スクリーンショット 2021-02-04 23.55.32.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/594194/55e07f03-c734-1bb2-eefc-f2cabb7c1d10.png)\n\n1. Admin Consoleをクリックしたあと「＋」ボタンから新規作成ページへ行く。\n   ![スクリーンショット 2021-02-05 0.03.14.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/594194/18fa70ed-2711-683a-9a33-86cefc9bc9d8.png)\n\n1. 名前、バージョン（今回はv2をチェック）、ドメインをそれぞれ入力して送信。\n   ![スクリーンショット 2021-02-05 0.01.21.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/594194/b52d85bf-3223-7a57-1502-1441e218132c.png)\n\n1. サイトキーとシークレットキーが表示されるので、閉じずにそのままにしておく。\n\n1. HTMLでメール送信フォームを作り、サーバー側でreCAPCHAのデータをチェックする\n\n```HTML:html\n<html>\n<head>\n    <!-- reCAPTCHAapi読み込み -->\n    <script src='https://www.google.com/recaptcha/api.js'></script>\n    <!-- jQuery読み込み -->\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n</head>\n<body>\n    <form id=\"form\" method=\"post\">\n        <div>\n            <label for=\"name\">名前</label>\n            <input type=\"text\" id=\"name\">\n        </div>\n        <div>\n            <label for=\"email\">メールアドレス</label>\n            <input  type=\"email\" id=\"email\">\n        </div>\n        <div>\n            <label for=\"body\">本文</label>\n            <textarea id=\"body\"></textarea>\n        </div>\n        <!-- formタグの内側でreCAPTHA登場場所を記述 サイトキーを入れる-->\n        <div class=\"g-recaptcha\" data-callback=\"onSubmit\" data-sitekey=\"\"></div>\n        <!-- 送信ボタンのデフォルトをdisaledにする -->\n        <button type=\"submit\" class=\"submit-button\" disabled>送信</button>\n    </form>\n    <script>\n    function onSubmit(recaptcha) {\n        if (recaptcha !== ''){\n            // reCAPTHAによるチェックをしたあとは送信ボタンを押せるようにする\n            $('.submit-button').removeAttr('disabled');\n        }\n    }\n    </script>\n</body>\n</html>\n```\n\n```php:php\n// メール送信処理の中で\n\n    $recaptcha = h($this->request->data['g-recaptcha-response']);\n    if (isset($recaptcha)) {\n        $captcha = $recaptcha;\n    } else {\n        $captcha = '';\n    }\n    // シークレットキーを入れる\n    $secretKey = \"\";\n    $resp = @file_get_contents(\"https://www.google.com/recaptcha/api/siteverify?secret={$secretKey}&response={$captcha}\");\n    $resp_result = json_decode($resp,true);\n    if(intval($resp_result[\"success\"]) !== 1) {\n        // reCAPTCHA承認失敗時の処理\n    } else {\n        // reCAPTCHA承認成功時の処理\n    }\n```\n\nこれで、v2のreCAPTHAを実装できた。\n![スクリーンショット 2021-02-05 1.04.38.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/594194/1a4ac286-bcfe-85dc-d10a-de22ebdae845.png)\n\nただし日々のコンピュータの進化は早く、これらを突破するソフトウェアやreCAPCHTAの脆弱性についてもすでにいくつか報告されている。\n\nコンピュータと人を見分けるテスト。熱い戦いが続きそう。\n\n### 参考にさせてもらった記事\n\n[Googleの「reCAPTCHA」を5分で実装する](https://liapoc.com/recaptcha.html)\n"}